#if defined(BOOST_VMD_TEST_GENERAL_HEADER)
#include <boost/vmd/vmd.hpp>
#else
#include <boost/vmd/number.hpp>
#include <boost/vmd/is_begin_tuple.hpp>
#include <boost/vmd/is_empty.hpp>
#endif
#include <boost/detail/lightweight_test.hpp>
#include <boost/preprocessor/list/at.hpp>
#include <boost/preprocessor/seq/elem.hpp>
#include <boost/preprocessor/tuple/elem.hpp>

int main()
  {
  
#if BOOST_PP_VARIADICS

	#define A_TUPLE (27,251,145 ())
	#define A_TUPLE2 (70 23 46 158 249,251,145 ())
	#define A_TUPLE3 (70 23 46 158 249 grist num,251,145 ())
	#define JDATA 43
	#define A_SEQ (73 (split) clear)(red)(green 44)
	#define A_LIST (17 (5),(grist,(yellow,BOOST_PP_NIL)))
	#define PEMPTY
	#define PPAREN (a b c)
	
	BOOST_TEST_EQ(BOOST_PP_TUPLE_ELEM(0,BOOST_VMD_BEGIN_NUMBER(BOOST_PP_TUPLE_ELEM(2,A_TUPLE),BOOST_VMD_RETURN_AFTER)),145);
	BOOST_TEST(BOOST_VMD_IS_BEGIN_TUPLE(BOOST_PP_TUPLE_ELEM(1,BOOST_VMD_BEGIN_NUMBER(BOOST_PP_TUPLE_ELEM(2,A_TUPLE),BOOST_VMD_RETURN_AFTER))));
	
	BOOST_TEST_EQ(BOOST_PP_TUPLE_ELEM(0,BOOST_VMD_BEGIN_NUMBER(JDATA,BOOST_VMD_RETURN_AFTER)),43);
	BOOST_TEST(BOOST_VMD_IS_EMPTY(BOOST_PP_TUPLE_ELEM(1,BOOST_VMD_BEGIN_NUMBER(JDATA,BOOST_VMD_RETURN_AFTER))));
	
	BOOST_TEST_EQ(BOOST_PP_TUPLE_ELEM(0,BOOST_VMD_BEGIN_NUMBER(BOOST_PP_SEQ_ELEM(0,A_SEQ),BOOST_VMD_RETURN_AFTER)),73);
	BOOST_TEST(BOOST_VMD_IS_BEGIN_TUPLE(BOOST_PP_TUPLE_ELEM(1,BOOST_VMD_BEGIN_NUMBER(BOOST_PP_SEQ_ELEM(0,A_SEQ),BOOST_VMD_RETURN_AFTER))));
	
	BOOST_TEST_EQ(BOOST_PP_TUPLE_ELEM(0,BOOST_VMD_BEGIN_NUMBER(BOOST_PP_LIST_AT(A_LIST,0),BOOST_VMD_RETURN_AFTER)),17);
	BOOST_TEST_EQ(BOOST_PP_TUPLE_ELEM(0,BOOST_PP_TUPLE_ELEM(1,BOOST_VMD_BEGIN_NUMBER(BOOST_PP_LIST_AT(A_LIST,0),BOOST_VMD_RETURN_AFTER))),5);
	
	BOOST_TEST(BOOST_VMD_IS_EMPTY(BOOST_PP_TUPLE_ELEM(0,BOOST_VMD_BEGIN_NUMBER(BOOST_PP_LIST_AT(A_LIST,1),BOOST_VMD_RETURN_AFTER))));
	BOOST_TEST(BOOST_VMD_IS_EMPTY(BOOST_PP_TUPLE_ELEM(1,BOOST_VMD_BEGIN_NUMBER(BOOST_PP_LIST_AT(A_LIST,1),BOOST_VMD_RETURN_AFTER))));
	
	BOOST_TEST(BOOST_VMD_IS_EMPTY(BOOST_PP_TUPLE_ELEM(0,BOOST_VMD_BEGIN_NUMBER(BOOST_PP_SEQ_ELEM(2,A_SEQ),BOOST_VMD_RETURN_AFTER))));
	BOOST_TEST(BOOST_VMD_IS_EMPTY(BOOST_PP_TUPLE_ELEM(1,BOOST_VMD_BEGIN_NUMBER(BOOST_PP_SEQ_ELEM(2,A_SEQ),BOOST_VMD_RETURN_AFTER))));
  
	BOOST_TEST(BOOST_VMD_IS_EMPTY(BOOST_PP_TUPLE_ELEM(0,BOOST_VMD_BEGIN_NUMBER(PEMPTY,BOOST_VMD_RETURN_AFTER))));
	BOOST_TEST(BOOST_VMD_IS_EMPTY(BOOST_PP_TUPLE_ELEM(1,BOOST_VMD_BEGIN_NUMBER(PEMPTY,BOOST_VMD_RETURN_AFTER))));
	
	BOOST_TEST(BOOST_VMD_IS_EMPTY(BOOST_PP_TUPLE_ELEM(0,BOOST_VMD_BEGIN_NUMBER(PPAREN,BOOST_VMD_RETURN_AFTER))));
	BOOST_TEST(BOOST_VMD_IS_EMPTY(BOOST_PP_TUPLE_ELEM(1,BOOST_VMD_BEGIN_NUMBER(PPAREN,BOOST_VMD_RETURN_AFTER))));
	
	BOOST_TEST_EQ(BOOST_PP_TUPLE_ELEM(0,BOOST_VMD_BEGIN_NUMBER(145 23 46,BOOST_VMD_RETURN_AFTER)),145);
	BOOST_TEST_EQ(BOOST_PP_TUPLE_ELEM(0,BOOST_VMD_BEGIN_NUMBER(111 23 46,BOOST_VMD_RETURN_AFTER)),111);
    BOOST_TEST_EQ(BOOST_PP_TUPLE_ELEM(0,BOOST_VMD_BEGIN_NUMBER(BOOST_PP_TUPLE_ELEM(1,BOOST_VMD_BEGIN_NUMBER(145 23 46,BOOST_VMD_RETURN_AFTER)),BOOST_VMD_RETURN_AFTER)),23);
	BOOST_TEST_EQ(BOOST_PP_TUPLE_ELEM(0,BOOST_VMD_BEGIN_NUMBER(BOOST_PP_TUPLE_ELEM(0,A_TUPLE2),BOOST_VMD_RETURN_AFTER)),70);

    BOOST_TEST_EQ(BOOST_PP_TUPLE_ELEM(0,BOOST_VMD_BEGIN_NUMBER(BOOST_PP_TUPLE_ELEM(0,A_TUPLE3),BOOST_VMD_RETURN_AFTER)),70);
    BOOST_TEST_EQ(BOOST_PP_TUPLE_ELEM(0,BOOST_VMD_BEGIN_NUMBER(135 249 somevalue zzz,BOOST_VMD_RETURN_AFTER)),135);
    BOOST_TEST_EQ(BOOST_PP_TUPLE_ELEM(0,BOOST_VMD_BEGIN_NUMBER(135 249 zzz,BOOST_VMD_RETURN_AFTER)),135);
    
	BOOST_TEST_EQ(BOOST_PP_TUPLE_ELEM(0,BOOST_VMD_BEGIN_NUMBER(145 23 zzz (here),BOOST_VMD_RETURN_AFTER)),145);
    
#endif

  return boost::report_errors();
  
  }
