[section:vmd_sequence_number Parsing v-numbers]

The macro BOOST_VMD_NUMBER looks for a v-number at the beginning of a v-sequence. 
Just like BOOST_VMD_IS_NUMBER it takes as a v-sequence as the only parameter. 
It returns a tuple of two elements. The first tuple element is the 
number if a v-number has been found or is an empty element if a v-number has not been found. 
The second tuple element is the rest of the v-sequence if a v-number has been found or 
an empty element if no v-number has been found. Since a v-number can be found and the 
rest of the v-sequence can be empty, one always needs to check the first tuple element 
to determine if the v-number was found at the beginning of the v-sequence or not.

[heading Syntax]

The syntax of the BOOST_VMD_NUMBER macro is:

 #define BOOST_VMD_NUMBER(vsequence) tuple_output
  
where the vsequence is the only parameter.
The macro always expands to:

 tuple_output = (beginning_number,rest_of_input)
 
where the beginning number and the rest of the input are
always empty if a beginning number is not found.
 
[heading Usage]

To use the BOOST_VMD_NUMBER macro either include the general header:

 #include <boost/vmd/vmd.hpp>
 
or include the specific header:

 #include <boost/vmd/number.hpp>

[heading Examples]

 #define SOME_INPUT_N1 234 (tupe1,tupe2)
 #define SOME_INPUT_N2 147
 #define SOME_INPUT_N3 5 (seq1)(seq2) 47
 #define SOME_INPUT_N4 name 227
 #define SOME_INPUT_N5 79 120 (tupe1,tupe2)
 #define SOME_INPUT_N6 257 name (tupe1,tupe2)
 
 BOOST_VMD_NUMBER(SOME_INPUT_N1)
 
expands to (234,(tupe1,tupe2))
 
 BOOST_VMD_NUMBER(SOME_INPUT_N2)
 
expands to (147,)
 
 BOOST_VMD_NUMBER(SOME_INPUT_N3)
 
expands to (5,(seq1)(seq2) 47)
 
 BOOST_VMD_NUMBER(SOME_INPUT_N4)
 
expands to (,) since the v-sequence does not beginning with a v-number
 
 BOOST_VMD_NUMBER(SOME_INPUT_N5)
 
expands to (79,120 (tupe1,tupe2))
 
 BOOST_VMD_NUMBER(SOME_INPUT_N6)

expands to (,) since 257 is outside the range of a v-number

[endsect]
