[section:vmd_test_parens Testing and removing parens]

A common need when using macros and the Boost PP is determining
whether a parameter begins with a set of parenthesis, within 
which tokens may exist. This is the form of a Boost PP tuple.
All Boost PP data types begin this way, and both Boost PP arrays and
lists are tuples of a certain form, while a Boost PP seq is a series 
of one or more single element tuples. Once again I have taken 
the implementation from code which Paul Mensonides posted and have
changed it slightly for Visual C++.

The macro [macroref BOOST_VMD_IS_BEGIN_PARENS] takes as its input variadic data
and determines whether it begins with a set of parenthesis.
It returns 1 if its input begins with a set of parenthesis, else it 
returns 0. The macro is a variadic macro which make take
any input[footnote For VC++ 8 the input is not variadic data but a single parameter.].

There may be other tokens after the set of parameters that begins the 
input, and the macro still returns 1. 

Another common need when using macros and the Boost PP is to 
remove the set of parenthesis from the beginning of a parameter.
This is what [macroref BOOST_VMD_REMOVE_PARENS] does. if the parameter does 
not contain a set of beginning parenthesis, the input parameter 
is returned as is, else the input parameter is returned with the 
beginning parenthesis removed. No other parenthesis after the 
possible beginning parenthesis is removed.

The end-user of VMD can include the individual header file 'vmd_is_begin_parens.hpp'
instead of the general header file 'vmd.hpp' for using the BOOST_VMD_IS_BEGIN_PARENS
macro and the individual header file 'vmd_remove_parens.hpp'
instead of the general header file 'vmd.hpp' for using the BOOST_VMD_REMOVE_PARENS
macro.

[endsect]
